AGENDA

[x] write agenda
[x] make docker image with vanilla dotnet console app - manually? with a Dockerfile?
[x] modify: console app must not terminate
[x] WRITE SCRIPT TO DO ALL THIS - DEBUG/RELEASE?
[x] Try out the Visual Studio 'docker'/'container' plugin - i hate it - docker-compose ok though
[x] make docker image without single file deployment so you can see the difference
[x] Try out the dotnet 7 experience to help build a docker container
[x] run a website - with exposed port!!!
[x] fix all existing projects (one is in the wrong folder! oops)
[x] Tour Podman Desktop, Docker Desktop, Rancher Desktop, lazydocker
[x] handle SIGTERM/SIGINT/SIGOTHER?
[x] set up fancy demo for SIGTERM
[x]  - no WHITE BOXES !!! - thread safety for all Console.Etc() operations
[x] set up fancy demo for BAD SIGTERM behavior
[x] make hypothesis as to why dotnet 3.1 is behaving GREAT
[x] ok own up to the fact that I don't know how to program
[x] fix bug and retest
[x] procrastinate: make timeout color different from 502,503,504
[x] test with a 45 second slow HTTP request - 
[x] make NEW hypothesis as to why dotnet 3.1 is behaving GREAT
[x] add CLI argument for testing good behavior and testing bad behavior
[x] procrastinate - .gitattributes - .sh files checkout as LF always
[x] switch worker to console project
[x] fix nginx path routing so we can host bad and good websites together
[x] permanently install nginx somehow - command is in history
[x] smooth out the tester (TRIED AND FAILED)
[ ] smooth out the tester (WITH A TIMER - ROUND TWO - FIGHT)
[ ] write constant deploy script for the demo

[x] write "google slides" presentation - REMEMBER TO LIMIT TO 25mins


[ ] procrastinate: blow up entire project structure?
[x] make new bad website - dotnet 31 is not that bad!
[x] add apology for badmouthing axum/rustlang
[x] try replacing Task.Run() with just ... nothing? see if it helps?
[x] tweak new axum bad website - smaller threshold for graceful termination timeout (because it will take the full amount of time)
[x] set up nginx-ingress and/or switch to rancher-desktop

[x] attempt dotnet 8 ahead-of-time compilation

[ ] secure baseline for a docker container - look into user in container, and USER in k8s?
[ ] try out Chainguard Academy base images
[ ] seccomp profiles in k8s
[ ] read up on read-only filesystems
[ ] calico networking? in k8s?
[ ] DEBUGGER
[ ] docker (OCI) containers are a slice of linux - DESCRIBE
[ ] build.ps1 for every project - or build.sh - make it right
[ ] procrastinate: completely re-org the projects into 01/02/03/04/05/etc subdirectories



LEARN
 - running as root user? Different in kubernetes?
 -  W: An error occurred during the signature verification. The repository is not updated and the 
    previous index files will be used. GPG error: https://packages.cloud.google.com/apt 
    kubernetes-xenial InRelease: The following signatures couldn't be verified because the
    public key is not available: NO_PUBKEY B53DC80D13EDEF05
